{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAaC,SAASC,cAAc,kBACpCC,EAAYF,SAASC,cAAc,iBACnCE,EAAcH,SAASC,cAAc,mBAmB3C,SAASG,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GAYtC,OAXgB,IAAIC,SAAQ,CAACC,EAASC,KACpCC,YAAW,KACLN,EAEFI,EAAQ,C,SAAEN,E,MAAUC,IAGpBM,EAAO,C,SAAEP,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CA7BEN,SAASC,cAAc,mBAE/Ba,iBAAiB,SAASC,IAC/BA,EAAMC,iBACN,MAAMC,EAASC,OAAOf,EAAYgB,OAClC,IAAIC,EAAeF,OAAOnB,EAAWoB,OACrC,IAAK,IAAIE,EAAI,EAAGA,EAAIJ,EAAQI,IAC1BjB,EAAciB,EAAI,EAAGD,GAClBE,MAAK,EAACjB,SAAEA,EAAQC,MAAEA,MACjBT,EAAA0B,OAAOC,QAAQ,qBAAqBnB,QAAeC,MAAU,IAE9DmB,OAAM,EAACpB,SAAEA,EAAQC,MAAEA,MAClBT,EAAA0B,OAAOG,QAAQ,oBAAoBrB,QAAeC,MAAU,IAEhEc,GAAgBF,OAAOhB,EAAUiB,M","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst delayInput = document.querySelector('[name=\"delay\"]');\nconst stepInput = document.querySelector('[name=\"step\"]');\nconst amountInput = document.querySelector('[name=\"amount\"]');\nconst button = document.querySelector('[type=\"submit\"]');\n\nbutton.addEventListener('click', event => {\n  event.preventDefault();\n  const amount = Number(amountInput.value);\n  let currentDelay = Number(delayInput.value);\n  for (let i = 0; i < amount; i++) {\n    createPromise(i + 1, currentDelay)\n      .then(({ position, delay }) => {\n        Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n      });\n    currentDelay += Number(stepInput.value);\n  }\n});\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        // Fulfill\n        resolve({ position, delay });\n      } else {\n        // Reject\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n  return promise;\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$delayInput","document","querySelector","$47d4ff9957288465$var$stepInput","$47d4ff9957288465$var$amountInput","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","event","preventDefault","amount","Number","value","currentDelay","i","then","Notify","success","catch","failure"],"version":3,"file":"03-promises.d9a2b9fd.js.map"}